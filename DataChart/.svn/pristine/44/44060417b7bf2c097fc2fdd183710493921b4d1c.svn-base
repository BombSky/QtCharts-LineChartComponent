#include "LineChartWidget.h"
#include <iostream>
using namespace std;

LineChartWidget::LineChartWidget()
{
    InItLineChart();
}

LineChartWidget::~LineChartWidget()
{


}

void LineChartWidget::InItLineChart()
{
    pLineChart     = new QChart;
    pLineChartView = new QChartView;
    pLineChart->legend()->setVisible(false);    //隐藏图例
    SetXAxisStyle(XaxisStyle);
    SetYAxisStyle(YaxisStyle);
    pLineChart->legend()->setVisible(false);  //设置图例可见
}

void LineChartWidget::SetXAxisStyle(QValueAxis *axisStyle)
{
    axisStyle     = new QValueAxis;
    axisStyle ->setRange(0,200);
    axisStyle ->setLabelFormat("%d"); //图例的格式  %d为十进制显示
    axisStyle ->setGridLineVisible(false);//网格
    pLineChart->addAxis(axisStyle, Qt::AlignBottom);  //将坐标轴加到chart上，居下
}

void LineChartWidget::SetYAxisStyle(QValueAxis *axisStyle)
{
    axisStyle     = new QValueAxis;
    axisStyle ->setRange(0,20);
    axisStyle ->setLabelFormat("%d");
    axisStyle ->setGridLineVisible(true);
    axisStyle ->setMinorTickCount(0);
    pLineChart->addAxis(axisStyle, Qt::AlignLeft);//居左
}

void LineChartWidget::DATA_POINT_TO_LineSeries(const QList<DATA_POINT_t> &values)
{

}

//QStringList LineChartWidget::GetLegendIds() const
//{

//}

//void LineChartWidget::AddLegend(const LEGEND_INFO_t &stLegend, const QList<DATA_INFO_t> &lstDataInfos)
//{
//    for(DATA_INFO_t DATA_INFO : lstDataInfos)
//    {
//        //替换DATA_INFO.id
//        LEGEND_DATA_INFO* i = FindID(DATA_INFO.id, pLineSeriesAndIDList);
//        if(i != nullptr)
//            pLineSeriesAndIDList->removeOne(i);
//        //添加
//        AddLineSeriesInLineSeriesAndIDList(stLegend.id, DATA_INFO.id, &DATA_INFO.values);
////        pLineSeriesAndIDList->removeAt()
//    }

//}
//LEGEND_DATA_INFO* LineChartWidget::FindID(QString Refer, QList<LEGEND_DATA_INFO*> *pLineSeriesAndIDList)
//{
//    for(LEGEND_DATA_INFO *i: *pLineSeriesAndIDList)
//        if(i->DataID == Refer)
////            return *i;
//    return nullptr;
//}

QLineSeries * LineChartWidget::DataPointToLineSeries(QList<DATA_POINT_t>* inputPointList)
{
    QLineSeries *pLineSeries = new QLineSeries();
    for(DATA_POINT_t DATA_POINT : *inputPointList)
        pLineSeries->append(QPointF(DATA_POINT.timeStamp, DATA_POINT.value));
    return pLineSeries;
}

void LineChartWidget::AddLineSeriesInLineSeriesAndIDList(QString LegendID, QString DataID, QList<DATA_POINT_t>* DataPointList)
{
    LEGEND_DATA_INFO* pLineSeriesIDList = new LEGEND_DATA_INFO(LegendID, DataID, DataPointToLineSeries(DataPointList));
    pLineSeriesAndIDList->append(pLineSeriesIDList);
}

//void LineChartWidget::DeleteLegend(const QString& strLegendId)
//{
//    LEGEND_DATA_INFO* i = FindID(strLegendId, pLineSeriesAndIDList);
//    if(i != nullptr)
//        pLineSeriesAndIDList->removeOne(i);
//}



















