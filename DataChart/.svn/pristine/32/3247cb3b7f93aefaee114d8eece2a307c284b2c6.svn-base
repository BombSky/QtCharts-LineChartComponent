#include "LineChartWidget.h"
#include <iostream>
using namespace std;


LineChartWidget::LineChartWidget()
{
    InItLineChart();
}

LineChartWidget::~LineChartWidget()
{


}

void LineChartWidget::InItLineChart()
{
    pLineChart     = new QChart;
    pLineChartView = new QChartView(pLineChart);
    pLineSeriesAndIDList = new QList<LEGEND_DATA_INFO*>;
    pLineChart->legend()->setVisible(false);    //隐藏图例
    SetXAxisStyle(XaxisStyle);
    SetYAxisStyle(YaxisStyle);
    pLineChart->legend()->setVisible(false);  //设置图例可见
}

void LineChartWidget::SetXAxisStyle(QDateTimeAxis *axisStyle)
{
    axisStyle     = new QDateTimeAxis;
    axisStyle->setMin(QDateTime::currentDateTime().addSecs(-60*1));
    axisStyle->setMax(QDateTime::currentDateTime().addSecs(0));
//    axisStyle ->setLabelFormat("%d"); //图例的格式  %d为十进制显示
    axisStyle ->setGridLineVisible(false);//网格
    pLineChart->addAxis(axisStyle, Qt::AlignBottom);  //将坐标轴加到chart上，居下
}

void LineChartWidget::SetYAxisStyle(QValueAxis *axisStyle)
{
    axisStyle     = new QValueAxis;
    axisStyle ->setRange(0,20);
    axisStyle ->setLabelFormat("%d");
    axisStyle ->setGridLineVisible(true);
    axisStyle ->setMinorTickCount(0);
    pLineChart->addAxis(axisStyle, Qt::AlignLeft);//居左
}

void LineChartWidget::DATA_POINT_TO_LineSeries(const QList<DATA_POINT_t> &values)
{

}

LineChartWidget::LEGEND_DATA_INFO* LineChartWidget::FindDataID(QString Refer)
{
    for(LEGEND_DATA_INFO *i: *pLineSeriesAndIDList)
        if(i->DataID == Refer)
//            return *i;
    return nullptr;
}

QLineSeries * LineChartWidget::DataPointToLineSeries(QList<DATA_POINT_t>* inputPointList)
{
    QLineSeries *pLineSeries = new QLineSeries();
    foreach(DATA_POINT_t DATA_POINT , *inputPointList)
        pLineSeries->append(QPointF(DATA_POINT.timeStamp, DATA_POINT.value));
    return pLineSeries;
}

void LineChartWidget::AddLineSeriesInLineSeriesAndIDList(QString LegendID, QString DataID, QList<DATA_POINT_t>* DataPointList)
{
//    QList<LEGEND_DATA_INFO*> *a = new QList<LEGEND_DATA_INFO*>;
    LEGEND_DATA_INFO* pLineSeriesIDList = new LEGEND_DATA_INFO(LegendID, DataID, DataPointToLineSeries(DataPointList));
    pLineSeriesAndIDList->append(pLineSeriesIDList);
}

QStringList LineChartWidget::FindLegendList(QString Refer)
{
    QStringList LegendVessel;
    foreach(LEGEND_DATA_INFO *i , *pLineSeriesAndIDList)
        if(Refer == i->LegendID)
            LegendVessel.append(i->LegendID);
    return LegendVessel;
}

void LineChartWidget::AddInpLineChartAll()
{
    foreach(LEGEND_DATA_INFO* i , *pLineSeriesAndIDList)
    {
        pLineChart->addSeries(i->pLineSeriesList);
//        pLineChart->setAxisX(XaxisStyle, i->pLineSeriesList);
//        pLineChart->setAxisY(YaxisStyle, i->pLineSeriesList);
//        pLineChart->addAxis(XaxisStyle, Qt::AlignBottom);
//        pLineChart->addAxis(YaxisStyle, Qt::AlignLeft);
    }
}

















