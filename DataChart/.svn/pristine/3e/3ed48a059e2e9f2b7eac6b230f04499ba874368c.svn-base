#include "LineChartWidget.h"
#include <iostream>
using namespace std;


LineChartWidget::LineChartWidget()
{
    InItLineChart();
}

LineChartWidget::~LineChartWidget()
{


}

void LineChartWidget::InItLineChart()
{
    pLineChart     = new QChart;
    pLineChartView = new QChartView(pLineChart);
    pLineSeriesAndIDList = new QList<LEGEND_DATA_INFO*>;
    pLineChart->legend()->setVisible(false);    //隐藏图例
    pLineChart->setBackgroundVisible(false);
    SetXAxisStyle();
    SetYAxisStyle();
}

void LineChartWidget::SetXAxisStyle()
{
    XaxisStyle     = new QDateTimeAxis;
//    XaxisStyle->setMin(QDateTime::currentDateTime().addSecs(-60*1));
//    XaxisStyle->setMax(QDateTime::currentDateTime().addSecs(0));
//    XaxisStyle->setRange
//            (
//                QDateTime::fromString("00:02","hh:mm"),
//                QDateTime::fromString("00:10","hh:mm")
//             );
    XaxisStyle ->setLinePenColor(QColor(54,105,115));       //坐标轴颜色
//    XaxisStyle ->setLabelsColor(QColor(49,52,59));          //字体颜色
    XaxisStyle ->setLabelsColor(QColor(255,255,255));          //字体颜色
    XaxisStyle->setFormat("hh:mm");
    XaxisStyle ->setGridLineVisible(false);//网格
    pLineChart->addAxis(XaxisStyle, Qt::AlignBottom);
}

void LineChartWidget::SetYAxisStyle()
{
    YaxisStyle     = new QValueAxis;
    YaxisStyle ->setRange(0,30);
    YaxisStyle ->setLabelsColor(QColor(255,255,255));
    YaxisStyle ->setLinePenColor(QColor(54,105,115));
    YaxisStyle ->setLabelFormat("%d");
    YaxisStyle ->setGridLineVisible(true);
    YaxisStyle ->setGridLineColor(QColor(255,255,255,7));
    YaxisStyle ->setTickCount(16);
    YaxisStyle ->setMinorTickCount(0);
    pLineChart->addAxis(YaxisStyle, Qt::AlignLeft);//居左
}

void LineChartWidget::DATA_POINT_TO_LineSeries(const QList<DATA_POINT_t> &values)
{

}

LineChartWidget::LEGEND_DATA_INFO* LineChartWidget::FindDataID(QString Refer)
{
    if(nullptr != pLineSeriesAndIDList)
        foreach(LEGEND_DATA_INFO *i, *pLineSeriesAndIDList)
        if(i->DataID == Refer)
            return i;
    return nullptr;
}

QLineSeries * LineChartWidget::DataPointToLineSeries(QList<DATA_POINT_t>* inputPointList)
{
    QDateTime *time = new QDateTime;
    QLineSeries *pLineSeries = new QLineSeries();
    foreach(DATA_POINT_t DATA_POINT , *inputPointList)
        pLineSeries->append(QPointF(DATA_POINT.timeStamp, DATA_POINT.value));
    return pLineSeries;
}

void LineChartWidget::AddLineSeriesInLineSeriesAndIDList(QString LegendID, QString DataID, QList<DATA_POINT_t>* DataPointList)
{
//    QList<LEGEND_DATA_INFO*> *a = new QList<LEGEND_DATA_INFO*>;
    LEGEND_DATA_INFO* pLineSeriesIDList = new LEGEND_DATA_INFO(LegendID, DataID, DataPointToLineSeries(DataPointList));
    pLineSeriesAndIDList->append(pLineSeriesIDList);
}

QStringList LineChartWidget::FindLegendList(QString Refer)
{
    QStringList LegendVessel;
    foreach(LEGEND_DATA_INFO *i , *pLineSeriesAndIDList)
        if(Refer == i->LegendID)
            LegendVessel.append(i->LegendID);
    return LegendVessel;
}

void LineChartWidget::AddInpLineChartAll()
{
    XaxisStyle->setRange
    (
        QDateTime::fromString("00:00","hh:mm"),
        QDateTime::fromString("00:10","hh:mm")
    );
    foreach(LEGEND_DATA_INFO* i , *pLineSeriesAndIDList)
    {
        pLineChart->addSeries(i->pLineSeriesList);
        pLineChart->setAxisX(XaxisStyle, i->pLineSeriesList);
        pLineChart->setAxisY(YaxisStyle, i->pLineSeriesList);
    }
}

















